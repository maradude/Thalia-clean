version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.8.1-browsers

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -U ".[dev,test]"

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Lint with flake8
          command: |
            . venv/bin/activate
            # stop the build if there are Python syntax errors or undefined names
            flake8  ~/repo --count --select=E9,F63,F7,F82 --show-source --statistics
            # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
            flake8 ~/repo --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            mkdir test-results
            python -m pytest --junitxml=test-results/junit.xml --ignore=./Tests/Selenium
      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results  
  deploy:
    docker:
      - image: circleci/python:3.8-buster 
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
   version: 2
   build-deploy:
     jobs:
       - build
       - deploy:
           filters:
             branches:
               only: master
